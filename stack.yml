version: '3.7'

services:

  agent:
    image: portainer/agent:2.11.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_portainer_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce:2.11.1
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9443:9443"
      - "9000:9000"
      - "8000:8000"
    volumes:
      - ./portainer_data:/data
    networks:
      - agent_portainer_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  kong:
    image: kong:latest
    volumes:
      - ./kong:/usr/local/kong/declarative
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 9090:8000
      - 8443:8443
    networks:
      - kong_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  mosquitto_mqtt:
    image: eclipse-mosquitto:latest
    ports:
      - 1883:1883
    volumes:
      - ./mosquitto_mqtt_vol:/mosquitto/log
      - ./mosquitto_mqtt_vol/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto_mqtt_vol/passwd.txt:/mosquitto/config/passwd.txt
      - ./mosquitto_mqtt_vol/acl.conf:/mosquitto/config/acl.conf
      - ./mosquitto_mqtt_vol:/mosquitto/data
    networks:
      - broker_adaptor_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  influx_db:
    image: influxdb:1.8
    ports:
      - 8086:8086
    volumes:
      - ./influx_database/influx_db:/var/lib/influxdb
      - ./influx_database:/etc/influxdb/config.yml
      - ./influx_database/init_influx_db.sh:/docker-entrypoint-initdb.d/init_influx_db.sh
    networks:
      - adaptor_influx_network
      - influx_grafana_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  grafana:
    image: 127.0.0.1:5000/grafana
    depends_on:
      - influx_db
    user: "$UID:$GID"
    ports:
      - 80:3000
    volumes:
      - ./grafana_db/data:/var/lib/grafana
      - ./grafana_db:/etc/grafana/config.ini
    env_file:
      - ./grafana_db/grafana.env
    networks:
      - influx_grafana_network
      - kong_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  adapter:
    image: 127.0.0.1:5000/adapter_mqtt
    depends_on:
      - influx_db
      - mosquitto_mqtt
    volumes:
    - /etc/timezone:/etc/timezone:ro
    - /etc/localtime:/etc/localtime:ro
    env_file:
      - ./adapter/adapter_idp.env
    networks:
      - adaptor_influx_network
      - broker_adaptor_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

networks:
  broker_adaptor_network:
    name: broker_adaptor_network
  adaptor_influx_network:
    name: adaptor_influx_network
  influx_grafana_network:
    name: influx_grafana_network
  kong_network:
    name: kong_network
  agent_portainer_network:
    name: agent_portainer_network
    driver: overlay
    attachable: true


volumes:
  influx_db:
    name: influx_db
  portainer_data:
    name: portainer_data
